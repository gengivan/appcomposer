"""Added Spec table

Revision ID: 2614c3bbec2a
Revises: 561b1cc23d6
Create Date: 2014-11-19 10:07:53.610437

"""

# revision identifiers, used by Alembic.
import traceback
from appcomposer.models import *

revision = '2614c3bbec2a'
down_revision = '561b1cc23d6'

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Specs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.Unicode(length=500), nullable=False),
    sa.Column('pid', sa.Unicode(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column(u'Apps', sa.Column('spec_id', sa.Integer(), nullable=True))
    ### end Alembic commands ###


    # Custom migration script.

    # Create a Spec object for every App, unless the Spec exists already.

    connection = op.get_bind()
    apps = connection.execute(text("SELECT id, spec_url, spec_id FROM Apps"))
    for id, spec_url, spec_id in apps:
        try:

            # TODO: There are some invalid apps from when Adapted apps could be created with no URL.
            # They should probably be removed.
            if spec_url is None:
                continue

            # Create Spec if not exist.
            exists = connection.execute(text("SELECT count(*) FROM Specs WHERE url=:spec_url"), spec_url=spec_url)
            exists = exists.fetchone()
            exists = exists[0] > 0


            if not exists:
                connection.execute(text("INSERT INTO Specs (url) VALUES (:spec_url)"), spec_url=spec_url)
            connection.execute(text("UPDATE Apps SET spec_id = (SELECT id FROM Specs WHERE url = :spec_url), spec_url = NULL WHERE id=:app_id"), spec_url=spec_url, app_id=id)

        except:
            traceback.print_exc()
            print "Exception on an app: %r" % id


def downgrade():

    connection = op.get_bind()
    apps = connection.execute(text("UPDATE Apps SET spec_url = (SELECT url FROM Specs WHERE id=Apps.spec_id)"))


    ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(u'Apps', 'spec_id')
    op.drop_table('Specs')
    ### end Alembic commands ###
